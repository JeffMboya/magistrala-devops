# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

{{- if .Values.supermq.ingress.enabled }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-nginx-ingress-bootstrap
  annotations:
{{- if and .Values.supermq.ingress.annotations (not (empty .Values.supermq.ingress.annotations)) }}
{{ toYaml .Values.supermq.ingress.annotations | indent 4 }}
{{- end }}
  labels:
{{- if and .Values.supermq.ingress.labels (not (empty .Values.supermq.ingress.labels)) }}
{{ toYaml .Values.supermq.ingress.labels | indent 4 }}
{{- end }}
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /bootstrap
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-bootstrap
                port:
                  number: {{ .Values.bootstrap.httpPort }}
{{- if and .Values.supermq.ingress.tls .Values.supermq.ingress.tls.secret }}
  tls:
    - hosts:
        - {{ .Values.supermq.ingress.hostname }}
      secretName: {{ .Values.supermq.ingress.tls.secret }}
{{- end }}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-nginx-ingress-readers
  annotations:
{{- if and .Values.supermq.ingress.annotations (not (empty .Values.supermq.ingress.annotations)) }}
{{ toYaml .Values.supermq.ingress.annotations | indent 4 }}
{{- end }}
  labels:
{{- if and .Values.supermq.ingress.labels (not (empty .Values.supermq.ingress.labels)) }}
{{ toYaml .Values.supermq.ingress.labels | indent 4 }}
{{- end }}
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /api/readers/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ .Release.Name }}-postgresreader
                port:
                  number: {{ .Values.postgresreader.httpPort }}
{{- if and .Values.supermq.ingress.tls .Values.supermq.ingress.tls.secret }}
  tls:
    - hosts:
        - {{ .Values.supermq.ingress.hostname }}
      secretName: {{ .Values.supermq.ingress.tls.secret }}
{{- end }}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-nginx-ingress-writers
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
{{- if and .Values.supermq.ingress.annotations (not (empty .Values.supermq.ingress.annotations)) }}
{{ toYaml .Values.supermq.ingress.annotations | indent 4 }}
{{- end }}
  labels:
{{- if and .Values.supermq.ingress.labels (not (empty .Values.supermq.ingress.labels)) }}
{{ toYaml .Values.supermq.ingress.labels | indent 4 }}
{{- end }}
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /api/writers/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ .Release.Name }}-postgreswriter
                port:
                  number: {{ .Values.postgreswriter.httpPort }}
{{- if and .Values.supermq.ingress.tls .Values.supermq.ingress.tls.secret }}
  tls:
    - hosts:
        - {{ .Values.supermq.ingress.hostname }}
      secretName: {{ .Values.supermq.ingress.tls.secret }}
{{- end }}

{{- end }}
